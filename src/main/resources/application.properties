spring.application.name=api-invoicecache

spring.security.enabled=false
management.security.enabled=false
security.basic.enabled=false
spring.main.banner-mode=off

management.endpoints.enabled-by-default=true
management.endpoints.web.exposure.include=*
spring.jpa.hibernate.ddl-auto=validate
spring.batch.jdbc.initialize-schema=never

#===========================
# Global DB settings
#===========================
spring.datasource.hikari.maximum-pool-size=3

#===========================
# OpenAPI
#===========================
openapi.name=api-invoicecache
openapi.title=api-invoicecache
openapi.version=@project.version@

#===========================
# Party config
#===========================
integration.party.connect-timeout=PT5S
integration.party.read-timeout=PT10S

#Disable automatic start of batch jobs since we want to run it with our scheduler.
spring.batch.job.enabled=false

#===========================
# Flyway properties
#===========================
spring.flyway.enabled=true
# Group all migrations together in the same transaction
spring.flyway.group=true

#Which sql-query-file to use
raindance.sql.filename=raindance-query.sql

#These are in java.time.Duration-compliant format
#How long to wait after startup to run batch
invoice.scheduled.initialdelay=PT5S
invoice.scheduled.fixedrate=PT10M

#How long before we consider invoices as outdated.
raindance.invoice.outdated=PT24H

#Logging exclusion filter for base64-content
logbook.exclusionfilters.json-path={'$..content':'[base64]'}

# "Enable" to disable the scheduling for invoices.
#invoices.scheduling.enabled=false

#Enable to see JPA-queries
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true
